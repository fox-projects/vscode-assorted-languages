{
	"$schema": "https://json.schemastore.org/tmLanguage.json",
	"name": "Expect",
	"scopeName": "source.exp",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#comment"
		},
		{
			"include": "#variable"
		},
		{
			"include": "#constant"
		},
		{
			"include": "#function"
		},
		{
			"include": "#strings"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.expect",
					"match": "\\b(if|else|while|for|foreach|return|set|expect|send|spawn|interact|exp_continue|puts|incr|failed|sleep|proc|send_user|eof|timeout|global|exp_internal|exp_open|exit|expr|lindex|stty|log_user|log_file|default|expect_after|switch)\\b"
				},
				{
					"name": "keyword.operator.expect",
					"match": "(==|<|>|<=|>=|!=)"
				},
				{
					"name": "keyword.other.expect",
					"match": "\\s(\\-\\w+)\\s"
				}
			]
		},
		"comment": {
			"patterns": [
				{
					"name": "comment.expect",
					"match": "^\\s*(#).*$\\n?"
				}
			]
		},
		"function": {
			"patterns": [
				{
					"name": "entity.name.function.expect",
					"match": "(?<=^|{)\\s*(proc)\\s+([^\\s]+)"
				}
			]
		},
		"variable": {
			"patterns": [
				{
					"name": "variable.expect",
					"match": "(\\$[\\w{}\\-\\_]+)"
				}
			]
		},
		"constant": {
			"patterns": [
				{
					"name": "constant.numeric.expect",
					"match": "(?<!\\S)(0[xX][0-9a-fA-F]+|[-+]?[0-9]*\\.?[0-9]+)(?!\\S)"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.expect",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.expect",
					"match": "\\\\."
				},
				{
					"include": "#variable"
				}
			]
		}
	}
}
